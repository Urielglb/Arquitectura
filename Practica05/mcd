.data
n1:	.word 16 #Primer numero a comparar
n2:	.word 32 #Segundo numero a comparar
in1:	.asciiz "Ingresa el primer numero\n"
in2:	.asciiz "Ingresa el segundo numero\n"

.text
.macro read_int(%in)
	li $v0, 5
	syscall
	move %in $v0
.end_macro 
.macro print_int(%out)
	li $v0 1
	move $a0, %out  
    	syscall
.end_macro
.macro print_str(%r)
	li $v0 4
	la $a0, %r 
    	syscall
.end_macro
	
	print_str(in1)
	read_int($t0) #Registro que guardará n1, este registro tendrá el resultado al terminar el algoritmo
	print_str(in2)
	read_int($t1) #Regustro que guardará n2

while:	#ciclo para sacar mcd
	beqz $t1 end #si n2 = 0 termina el ciclo
	la $t2 ($t1) #Guardamos en un registro distinto a n2
	div $t0 $t1  #n1/n2
	mfhi $t1 #Se guarda en el registro de n2 el residuo de n1/n2
	la $t0 ($t2) #Se guarda en el registro de n1 a n2, de esta manera el nuevo n1 es el antiguo n2 y n2 es el residuo de el antiguo n1 dividido entre el antiguo n2  
	j while #Se regresa al ciclo
	

end:
	print_int($t0)
